{"version":3,"sources":["images/cryptocurrencies.png","components/Navbar.jsx","services/cryptoApi.js","components/Loader.jsx","components/Cryptocurrencies.jsx","components/LineChart.jsx","components/CryptoDetails.jsx","services/cryptoNewsApi.js","components/News.jsx","components/Exchanges.jsx","components/HomePage.jsx","App.js","store.js","index.js"],"names":["Navbar","useState","showMenu","setShowMenu","screenSize","setScreenSize","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","className","style","marginRight","src","icon","size","Title","level","to","onClick","MenuOutlined","theme","Item","HomeOutlined","FundOutlined","BulbOutlined","cryptoHeaders","process","createRequest","url","headers","cryptoApi","createApi","baseQuery","fetchBaseQuery","baseUrl","reducerPath","endpoints","builder","getCryptos","query","limit","getCryptoDetails","coinId","getCryptoHistory","timePeriod","getExchanges","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetCryptoHistoryQuery","useGetExchangesQuery","Loader","Cryptocurrencies","homepage","data","isFetching","coins","cryptos","setCryptos","searchTerm","setSearchTerm","filteredCryptos","filter","crypto","name","toLowerCase","includes","type","value","placeholder","onChange","e","target","gutter","map","xs","sm","lg","uuid","title","rank","extra","iconUrl","alt","hoverable","millify","price","marketCap","change","Typography","LineChart","coinName","currentPrice","cryptoHistory","coinPrice","coinTimestamp","history","forEach","coin","push","Date","timestamp","toLocaleDateString","reverse","labels","datasets","label","fill","backgroundColor","borderColor","Text","Option","Select","CryptoDetails","setTimePeriod","useParams","isFetching2","cryptoDetails","console","log","stats","DollarCircleOutlined","NumberOutlined","ThunderboltOutlined","allTimeHigh","TrophyOutlined","genericStats","numberOfMarkets","numberOfExchanges","MoneyCollectOutlined","supply","confirmed","CheckOutlined","StopOutlined","ExclamationCircleOutlined","total","circulating","symbol","defaultValue","period","HTMLReactParser","description","links","link","href","rel","cryptoNewsHeaders","cryptoNewsApi","getCryptoNews","newsCategory","count","useGetCryptoNewsQuery","News","setNewsCategory","span","showSearch","optionFilterProp","filterOption","input","option","children","indexOf","news","index","maxHeight","maxWidth","image","thumbnail","contentUrl","substring","provider","moment","datePublished","startOf","fromNow","Collapse","Panel","HomePage","totalCoins","marginTop","totalMarketCap","total24hVolume","totalMarkets","totalExchanges","App","exact","path","textAlign","color","fontSize","margin","GithubOutlined","LinkedinOutlined","TwitterOutlined","configureStore","reducer","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.e72abdb2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cryptocurrencies.28e55722.png\";","import { Menu, Typography, Avatar, Button } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  HomeOutlined,\r\n  BulbOutlined,\r\n  FundOutlined,\r\n  MenuOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport icon from '../images/cryptocurrencies.png';\r\nimport { useEffect, useState } from 'react';\r\n\r\nconst Navbar = () => {\r\n  const [showMenu, setShowMenu] = useState(false);\r\n  const [screenSize, setScreenSize] = useState(null);\r\n  useEffect(() => {\r\n    const handleResize = () => setScreenSize(window.innerWidth);\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    handleResize();\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (screenSize < 800) setShowMenu(false);\r\n    else setShowMenu(true);\r\n  }, [screenSize]);\r\n  return (\r\n    <div className=\"nav-container\">\r\n      <div className=\"logo-container\">\r\n        <Avatar style={{ marginRight: '12px' }} src={icon} size={'large'} />\r\n        <Typography.Title level={2}>\r\n          <Link to=\"/cryptoworld/\">CryptoWorld </Link>\r\n        </Typography.Title>\r\n        <Button\r\n          className=\"menu-control-container\"\r\n          onClick={() => setShowMenu(!showMenu)}\r\n        >\r\n          <MenuOutlined />\r\n        </Button>\r\n      </div>\r\n\r\n      {showMenu && (\r\n        <div>\r\n          <Menu theme=\"dark\">\r\n            <Menu.Item icon={<HomeOutlined />}>\r\n              <Link to=\"/cryptoworld/\">Home </Link>\r\n            </Menu.Item>\r\n            <Menu.Item icon={<FundOutlined />}>\r\n              <Link to=\"/cryptoworld/cryptocurrencies\">Cryptocurrencies </Link>\r\n            </Menu.Item>\r\n            {/* <Menu.Item icon={<MoneyCollectOutlined />}>\r\n              <Link to=\"/cryptoworld/exchanges\">Exchanges </Link>\r\n            </Menu.Item> */}\r\n            <Menu.Item icon={<BulbOutlined />}>\r\n              <Link to=\"/cryptoworld/news\">News </Link>\r\n            </Menu.Item>\r\n          </Menu>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\nconst cryptoHeaders = {\r\n  'x-rapidapi-host': 'coinranking1.p.rapidapi.com',\r\n  'x-rapidapi-key': process.env.REACT_APP_KEY,\r\n};\r\n\r\nconst createRequest = (url) => ({ url, headers: cryptoHeaders });\r\n\r\nconst baseUrl = 'https://coinranking1.p.rapidapi.com//';\r\n\r\nexport const cryptoApi = createApi({\r\n  baseQuery: fetchBaseQuery({ baseUrl }),\r\n  reducerPath: 'cryptoApi',\r\n  endpoints: (builder) => ({\r\n    getCryptos: builder.query({\r\n      query: (limit) => createRequest(`/coins?limit=${limit}`),\r\n    }),\r\n    getCryptoDetails: builder.query({\r\n      query: (coinId) => createRequest(`/coin/${coinId}`),\r\n    }),\r\n    getCryptoHistory: builder.query({\r\n      query: ({ coinId, timePeriod }) =>\r\n        createRequest(`/coin/${coinId}/history/?timePeriod=${timePeriod}`),\r\n    }),\r\n    getExchanges: builder.query({\r\n      query: () => createRequest(`/exchanges`),\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useGetCryptosQuery,\r\n  useGetCryptoDetailsQuery,\r\n  useGetExchangesQuery,\r\n  useGetCryptoHistoryQuery,\r\n} = cryptoApi;\r\n","import { Spin } from \"antd\";\r\nimport React from \"react\";\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"loader\">\r\n      <Spin />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import { Card, Col, Row } from 'antd';\r\nimport millify from 'millify';\r\nimport { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useGetCryptosQuery } from '../services/cryptoApi';\r\nimport Loader from './Loader';\r\n\r\nconst Cryptocurrencies = ({ homepage }) => {\r\n  const limit = homepage ? 10 : 100;\r\n  const { data, isFetching } = useGetCryptosQuery(limit);\r\n  const [cryptos, setCryptos] = useState(data?.data?.coins);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      let filteredCryptos = data?.data?.coins;\r\n      filteredCryptos = filteredCryptos?.filter((crypto) =>\r\n        crypto.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n      );\r\n      setCryptos(filteredCryptos);\r\n    }\r\n  }, [searchTerm, data, homepage]);\r\n\r\n  if (isFetching) return <Loader />;\r\n\r\n  return (\r\n    <div>\r\n      {!homepage ? (\r\n        <div className=\"search-crypto\">\r\n          <input\r\n            type=\"text\"\r\n            value={searchTerm}\r\n            placeholder=\"Search Cryptocurrency\"\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n          />\r\n        </div>\r\n      ) : (\r\n        ''\r\n      )}\r\n      <Row gutter={[32, 32]}>\r\n        {cryptos &&\r\n          cryptos?.map((crypto) => (\r\n            <Col\r\n              xs={24}\r\n              sm={12}\r\n              lg={6}\r\n              className=\"crypto-card\"\r\n              key={crypto.uuid}\r\n            >\r\n              <Link to={`/cryptoworld/coin/${crypto.uuid}`}>\r\n                <Card\r\n                  title={`${crypto.rank}. ${crypto.name}`}\r\n                  extra={\r\n                    <img\r\n                      className=\"crypto-image\"\r\n                      src={`${crypto.iconUrl}`}\r\n                      alt={`${crypto.name}`}\r\n                    />\r\n                  }\r\n                  hoverable\r\n                >\r\n                  <p>Price : {millify(crypto?.price) || 0}</p>\r\n                  <p>Market cap : {millify(crypto?.marketCap) || 0}</p>\r\n                  <p>Daily change : {millify(crypto?.change) || 0}%</p>\r\n                </Card>\r\n              </Link>\r\n            </Col>\r\n          ))}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cryptocurrencies;\r\n","import React from 'react';\r\n\r\nimport { Typography, Row, Col } from 'antd';\r\nimport { Line } from 'react-chartjs-2';\r\nconst { Title } = Typography;\r\nconst LineChart = ({ coinName, currentPrice, cryptoHistory }) => {\r\n  const coinPrice = [];\r\n  const coinTimestamp = [];\r\n\r\n  cryptoHistory?.data?.history?.forEach((coin) => {\r\n    coinPrice.push(coin.price);\r\n    coinTimestamp.push(new Date(coin.timestamp * 1000).toLocaleDateString());\r\n  });\r\n  coinPrice.reverse();\r\n  coinTimestamp.reverse();\r\n  const data = {\r\n    labels: coinTimestamp,\r\n    datasets: [\r\n      {\r\n        label: 'Price in USD',\r\n        data: coinPrice,\r\n        fill: true,\r\n        backgroundColor: 'rgba(192,75,207,0.1)',\r\n        borderColor: 'rgba(192,75,207,1)',\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"chart-header\">\r\n        <Title level={2} className=\"chart-title\">\r\n          {coinName} Price Chart\r\n        </Title>\r\n        <Col className=\"price-container\">\r\n          <Title level={5} className=\"price-change\">\r\n            {cryptoHistory?.data?.change} %\r\n          </Title>\r\n          <Title level={5} className=\"current-price\">\r\n            Current {coinName} Price: $ {currentPrice}\r\n          </Title>\r\n        </Col>\r\n      </Row>\r\n      <Line data={data} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LineChart;\r\n","import React, { useState } from 'react';\r\nimport HTMLReactParser from 'html-react-parser';\r\nimport { useParams } from 'react-router';\r\nimport millify from 'millify';\r\nimport { Select, Col, Row, Typography } from 'antd';\r\nimport {\r\n  MoneyCollectOutlined,\r\n  DollarCircleOutlined,\r\n  FundOutlined,\r\n  ExclamationCircleOutlined,\r\n  StopOutlined,\r\n  TrophyOutlined,\r\n  NumberOutlined,\r\n  ThunderboltOutlined,\r\n  CheckOutlined,\r\n} from '@ant-design/icons';\r\nimport {\r\n  useGetCryptoDetailsQuery,\r\n  useGetCryptoHistoryQuery,\r\n} from '../services/cryptoApi';\r\nimport LineChart from './LineChart';\r\nimport Loader from './Loader';\r\n\r\nconst { Title, Text } = Typography;\r\nconst { Option } = Select;\r\n\r\nconst CryptoDetails = () => {\r\n  const [timePeriod, setTimePeriod] = useState('7d');\r\n  const { coinId } = useParams();\r\n  const { data, isFetching } = useGetCryptoDetailsQuery(coinId);\r\n  const { data: cryptoHistory, isFetching2 } = useGetCryptoHistoryQuery({\r\n    coinId,\r\n    timePeriod,\r\n  });\r\n  if (isFetching || isFetching2) return <Loader />;\r\n  const cryptoDetails = data?.data?.coin;\r\n  console.log(cryptoDetails);\r\n\r\n  const time = ['3h', '24h', '7d', '30d', '3m', '1y', '3y', '5y'];\r\n\r\n  const stats = [\r\n    {\r\n      title: 'Price to USD',\r\n      value: `$ ${cryptoDetails?.price && millify(cryptoDetails?.price)}`,\r\n      icon: <DollarCircleOutlined />,\r\n    },\r\n    { title: 'Rank', value: cryptoDetails?.rank, icon: <NumberOutlined /> },\r\n    {\r\n      title: '24h Volume',\r\n      value: `$ ${\r\n        cryptoDetails?.['24hVolume'] && millify(cryptoDetails?.['24hVolume'])\r\n      }`,\r\n      icon: <ThunderboltOutlined />,\r\n    },\r\n    {\r\n      title: 'Market Cap',\r\n      value: `$ ${\r\n        cryptoDetails?.marketCap && millify(cryptoDetails?.marketCap)\r\n      }`,\r\n      icon: <DollarCircleOutlined />,\r\n    },\r\n    {\r\n      title: 'All-time-high',\r\n      value: `$ ${millify(cryptoDetails?.allTimeHigh.price)}`,\r\n      icon: <TrophyOutlined />,\r\n    },\r\n  ];\r\n\r\n  const genericStats = [\r\n    {\r\n      title: 'Number Of Markets',\r\n      value: cryptoDetails?.numberOfMarkets,\r\n      icon: <FundOutlined />,\r\n    },\r\n    {\r\n      title: 'Number Of Exchanges',\r\n      value: cryptoDetails?.numberOfExchanges,\r\n      icon: <MoneyCollectOutlined />,\r\n    },\r\n    {\r\n      title: 'Aprroved Supply',\r\n      value: cryptoDetails?.supply?.confirmed ? (\r\n        <CheckOutlined />\r\n      ) : (\r\n        <StopOutlined />\r\n      ),\r\n      icon: <ExclamationCircleOutlined />,\r\n    },\r\n    {\r\n      title: 'Total Supply',\r\n      value: `$ ${millify(cryptoDetails?.supply?.total || 0)}`,\r\n      icon: <ExclamationCircleOutlined />,\r\n    },\r\n    {\r\n      title: 'Circulating Supply',\r\n      value: `$ ${millify(cryptoDetails?.supply?.circulating || 0)}`,\r\n      icon: <ExclamationCircleOutlined />,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Col className=\"coin-detail-container\">\r\n      <Col className=\"coin-heading-container\">\r\n        <Title level={2} className=\"coin-name\">\r\n          {cryptoDetails.name} ({cryptoDetails.symbol}) Price\r\n        </Title>\r\n        <p>\r\n          {cryptoDetails.name} live price in US Dollars. View value statistics,\r\n          market cap and supply.\r\n        </p>\r\n      </Col>\r\n      <Select\r\n        defaultValue=\"7d\"\r\n        placeholder=\"Select time period\"\r\n        className=\"select-timeperiod\"\r\n        onChange={(value) => setTimePeriod(value)}\r\n      >\r\n        {time.map((period) => (\r\n          <Option key={period} value={period}>\r\n            {period}\r\n          </Option>\r\n        ))}\r\n      </Select>\r\n      <LineChart\r\n        coinName={cryptoDetails.name}\r\n        currentPrice={millify(cryptoDetails.price)}\r\n        cryptoHistory={cryptoHistory}\r\n      />\r\n      <Col className=\"stats-container\">\r\n        <Col className=\"coin-value-statistics\">\r\n          <Col className=\"coin-value-statistics-heading\">\r\n            <Title level={3}>{cryptoDetails.name} Value Statistics</Title>\r\n            <p>An overview showing the stats of {cryptoDetails.name}</p>\r\n          </Col>\r\n          {stats.map(({ icon, title, value }) => (\r\n            <Col className=\"coin-stats\" key={title}>\r\n              <Col className=\"coin-stats-name\">\r\n                <Text>{icon}</Text>\r\n                <Text>{title}</Text>\r\n              </Col>\r\n              <Text className=\"stats\">{value}</Text>\r\n            </Col>\r\n          ))}\r\n        </Col>\r\n        <Col>\r\n          <Col className=\"coin-value-statistics-heading\">\r\n            <Title level={3}>Other Value Statistics</Title>\r\n            <p>An overview showing the stats of all cryptocurrencies</p>\r\n          </Col>\r\n          {genericStats.map(({ icon, title, value }) => (\r\n            <Col className=\"coin-stats\" key={title}>\r\n              <Col className=\"coin-stats-name\">\r\n                <Text>{icon}</Text>\r\n                <Text>{title}</Text>\r\n              </Col>\r\n              <Text className=\"stats\">{value}</Text>\r\n            </Col>\r\n          ))}\r\n        </Col>\r\n      </Col>\r\n      <Col className=\"coin-desc-link\">\r\n        <Row className=\"coin-desc\">\r\n          <Title level={3} className=\"coin-details-heading\">\r\n            What is {cryptoDetails.name}\r\n          </Title>\r\n          {HTMLReactParser(cryptoDetails.description)}\r\n        </Row>\r\n\r\n        <Col className=\"coin-links\">\r\n          <Title level={3} className=\"coin-details-heading\">\r\n            {cryptoDetails.name} Links\r\n          </Title>\r\n          {cryptoDetails.links.map((link) => (\r\n            <Row className=\"coin-link\" key={link.name}>\r\n              <Title level={5} className=\"link-name\">\r\n                {link.type}\r\n              </Title>\r\n              <a href={link.url} target=\"_blank\" rel=\"noreferrer\">\r\n                {link.name}\r\n              </a>\r\n            </Row>\r\n          ))}\r\n        </Col>\r\n      </Col>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default CryptoDetails;\r\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\n\r\nconst cryptoNewsHeaders = {\r\n  \"x-bingapis-sdk\": \"true\",\r\n  \"x-rapidapi-host\": \"bing-news-search1.p.rapidapi.com\",\r\n  \"x-rapidapi-key\": process.env.REACT_APP_KEY,\r\n};\r\n\r\nconst createRequest = (url) => ({ url, headers: cryptoNewsHeaders });\r\n\r\nconst baseUrl = \"https://bing-news-search1.p.rapidapi.com\";\r\n\r\nexport const cryptoNewsApi = createApi({\r\n  baseQuery: fetchBaseQuery({ baseUrl }),\r\n  reducerPath: \"cryptoNewsApi\",\r\n  endpoints: (builder) => ({\r\n    getCryptoNews: builder.query({\r\n      query: ({ newsCategory, count }) =>\r\n        createRequest(\r\n          `/news/search?q=${newsCategory}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`\r\n        ),\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const { useGetCryptoNewsQuery } = cryptoNewsApi;\r\n","import { useState } from 'react';\r\nimport { Col, Row, Typography, Card, Select, Avatar } from 'antd';\r\nimport moment from 'moment';\r\nimport { useGetCryptoNewsQuery } from '../services/cryptoNewsApi';\r\nimport { useGetCryptosQuery } from '../services/cryptoApi';\r\nimport Loader from './Loader';\r\n\r\nconst { Title, Text } = Typography;\r\nconst { Option } = Select;\r\n\r\nconst backupImage =\r\n  'https://images.pexels.com/photos/4808279/pexels-photo-4808279.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260';\r\n\r\nconst News = ({ homepage }) => {\r\n  const [newsCategory, setNewsCategory] = useState('Cryptocurrency');\r\n  const { data, isFetching } = useGetCryptoNewsQuery({\r\n    newsCategory,\r\n    count: homepage ? 6 : 12,\r\n  });\r\n  const { data: cryptos } = useGetCryptosQuery(100);\r\n\r\n  if (isFetching) return <Loader />;\r\n\r\n  return (\r\n    <Row gutter={[24, 24]}>\r\n      {!homepage ? (\r\n        <Col span={24}>\r\n          <Select\r\n            showSearch\r\n            className=\"select-news\"\r\n            placeholder=\"Select a Crypto\"\r\n            onChange={(value) => setNewsCategory(value)}\r\n            optionFilterProp=\"children\"\r\n            filterOption={(input, option) =>\r\n              option.children.toLowerCase().indexOf(input.toLowerCase()) > 0\r\n            }\r\n          >\r\n            <Option value=\"Cryptocurrency\"> All Cryptocurrencies</Option>\r\n            {cryptos?.data?.coins?.map((crypto) => (\r\n              <Option key={crypto.name} value={crypto.name}>\r\n                {crypto.name}\r\n              </Option>\r\n            ))}\r\n          </Select>\r\n        </Col>\r\n      ) : (\r\n        ''\r\n      )}\r\n      {data?.value.map((news, index) => (\r\n        <Col xs={24} sm={12} lg={8} key={index}>\r\n          <Card hoverable className=\"news-card\">\r\n            <a href={news.url} target=\"_blank\" rel=\"noreferrer\">\r\n              <div className=\"news-image-container\">\r\n                <Title className=\"news-title\" level={4}>\r\n                  {news.name}{' '}\r\n                </Title>\r\n                <img\r\n                  style={{ maxHeight: '100px', maxWidth: '100px' }}\r\n                  src={news?.image?.thumbnail?.contentUrl || backupImage}\r\n                  alt=\"news\"\r\n                />\r\n              </div>\r\n              <p>\r\n                {news.description > 100\r\n                  ? `${news.description.substring(0, 100)}...`\r\n                  : news.description}\r\n              </p>\r\n              <div className=\"provider-container\">\r\n                <div>\r\n                  <Avatar\r\n                    src={news.provider[0]?.image?.thumbnail?.contentUrl}\r\n                    alt=\"news\"\r\n                  ></Avatar>\r\n                  <Text className=\"provider-name\">\r\n                    {news?.provider[0]?.name}\r\n                  </Text>\r\n                </div>\r\n                <Text>\r\n                  {moment(news?.datePublished)?.startOf('ss')?.fromNow()}\r\n                </Text>\r\n              </div>\r\n            </a>\r\n          </Card>\r\n        </Col>\r\n      ))}\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default News;\r\n","import { Row, Col, Collapse, Typography, Avatar } from 'antd';\r\nimport HTMLReactParser from 'html-react-parser';\r\nimport millify from 'millify';\r\n\r\nimport { useGetExchangesQuery } from '../services/cryptoApi';\r\nimport Loader from './Loader';\r\n\r\nconst { Panel } = Collapse;\r\nconst { Text } = Typography;\r\nconst Exchanges = () => {\r\n  const { data, isFetching } = useGetExchangesQuery();\r\n  if (isFetching) return <Loader />;\r\n  return (\r\n    <>\r\n      <Row style={{ fontWeight: '700', fontSize: '1rem' }}>\r\n        <Col span={6}>Exchanges</Col>\r\n        <Col span={6}>24h Trade Volume</Col>\r\n        <Col span={6}>Markets</Col>\r\n        <Col span={6}>Market Share</Col>\r\n      </Row>\r\n      <Row>\r\n        {data?.data?.exchanges?.map((exchange) => (\r\n          <Col span={24} key={exchange.id}>\r\n            <Collapse>\r\n              <Panel\r\n                showArrow={false}\r\n                key={exchange.id}\r\n                header={\r\n                  <Row>\r\n                    <Col span={6}>\r\n                      <Text>\r\n                        <strong> {exchange.rank}. </strong>\r\n                      </Text>\r\n                      <Avatar\r\n                        style={{ marginInline: '12px' }}\r\n                        src={exchange.iconUrl}\r\n                      />\r\n                      <Text>\r\n                        <strong> {exchange.name}</strong>\r\n                      </Text>\r\n                    </Col>\r\n                    <Col span={6}>${millify(exchange.volume)}</Col>\r\n                    <Col span={6}>{millify(exchange.numberOfMarkets)}</Col>\r\n                    <Col span={6}> {millify(exchange.marketShare)}</Col>\r\n                  </Row>\r\n                }\r\n              >\r\n                <>{HTMLReactParser(exchange.description || '')}</>\r\n              </Panel>\r\n            </Collapse>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Exchanges;\r\n","import { Col, Row, Card, Statistic, Typography } from 'antd';\r\nimport { useGetCryptosQuery } from '../services/cryptoApi';\r\nimport millify from 'millify';\r\nimport { Link } from 'react-router-dom';\r\nimport { Cryptocurrencies, News } from '.';\r\nimport Loader from './Loader';\r\n\r\nconst HomePage = () => {\r\n  const { data, isFetching } = useGetCryptosQuery(10);\r\n  const stats = data?.data?.stats;\r\n\r\n  const { Title } = Typography;\r\n  if (isFetching) return <Loader />;\r\n  return (\r\n    <div>\r\n      <Row gutter={[32, 0]}>\r\n        <Col lg={20}>\r\n          <div className=\"home-heading-container\">\r\n            <Title level={2} className=\"home-title\">\r\n              Top 10 Cryptocurrencies globally\r\n            </Title>\r\n            <Title level={4} className=\"show-more\">\r\n              <Link to=\"/cryptoworld/cryptocurrencies\"> Show More</Link>\r\n            </Title>\r\n          </div>\r\n          <Cryptocurrencies homepage />\r\n        </Col>\r\n        <Col lg={4} xs={24}>\r\n          <Title className=\"heading\" level={2}>\r\n            Global Stats\r\n          </Title>\r\n          <Card>\r\n            <Statistic\r\n              title=\"Total Cryptocurrencies\"\r\n              value={stats?.totalCoins}\r\n            ></Statistic>\r\n          </Card>\r\n          <Card style={{ marginTop: '16px' }}>\r\n            <Statistic\r\n              title=\"Total Market Cap\"\r\n              value={millify(stats?.totalMarketCap)}\r\n            ></Statistic>\r\n          </Card>\r\n          <Card style={{ marginTop: '16px' }}>\r\n            <Statistic\r\n              title=\"Total 24h Volume\"\r\n              value={millify(stats?.total24hVolume)}\r\n            ></Statistic>\r\n          </Card>\r\n          <Card style={{ marginTop: '16px' }}>\r\n            <Statistic\r\n              title=\"Total Markets\"\r\n              value={millify(stats?.totalMarkets)}\r\n            ></Statistic>\r\n          </Card>\r\n          <Card style={{ marginTop: '16px' }}>\r\n            <Statistic\r\n              title=\"Total Exchanges\"\r\n              value={millify(stats?.totalExchanges)}\r\n            ></Statistic>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n\r\n      <div className=\"home-heading-container\" style={{ marginTop: '12px' }}>\r\n        <Title level={2} className=\"home-title\">\r\n          Crypto News\r\n        </Title>\r\n        <Title level={4} className=\"show-more\">\r\n          <Link to=\"/cryptoworld/news\"> Show More</Link>\r\n        </Title>\r\n      </div>\r\n      <News homepage />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import './App.css';\nimport {\n  HomePage,\n  Navbar,\n  CryptoDetails,\n  Cryptocurrencies,\n  News,\n} from './components';\nimport { Layout, Typography, Space } from 'antd';\nimport { Switch, Route } from 'react-router-dom';\nimport 'antd/dist/antd.css';\nimport {\n  GithubOutlined,\n  LinkedinOutlined,\n  TwitterOutlined,\n} from '@ant-design/icons';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <div className=\"navbar\">\n        <Navbar />\n      </div>\n      <div className=\"main\">\n        <Layout>\n          <div className=\"routes\">\n            <Switch>\n              <Route exact path=\"/cryptoworld/\">\n                <HomePage />\n              </Route>\n              <Route exact path=\"/cryptoworld/cryptocurrencies\">\n                <Cryptocurrencies />\n              </Route>\n              <Route exact path=\"/cryptoworld/coin/:coinId/\">\n                <CryptoDetails />\n              </Route>\n              <Route exact path=\"/cryptoworld/news\">\n                <News />\n              </Route>\n            </Switch>\n          </div>\n        </Layout>\n\n        <div className=\"footer\">\n          <Typography.Title\n            level={5}\n            style={{ textAlign: 'center', color: 'white' }}\n          >\n            Made with ❤️ by <a href=\"https://anisamaiya.vercel.app\">Animesh</a>\n          </Typography.Title>\n          <Space size=\"large\">\n            <a\n              style={{ fontSize: '24px', margin: '8px' }}\n              aria-label=\"Github\"\n              href=\"https://github.com/asamaiya00/\"\n            >\n              <GithubOutlined />\n            </a>\n            <a\n              style={{ fontSize: '24px', margin: '8px' }}\n              aria-label=\"Linkedin\"\n              href=\"https://www.linkedin.com/in/animesh-samaiya-aa3166190/\"\n            >\n              <LinkedinOutlined />\n            </a>\n            <a\n              style={{ fontSize: '24px', margin: '8px' }}\n              aria-label=\"Twitter\"\n              href=\"https://twitter.com/asamaiya00\"\n            >\n              <TwitterOutlined />\n            </a>\n          </Space>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { cryptoApi } from \"./services/cryptoApi\";\r\nimport { cryptoNewsApi } from \"./services/cryptoNewsApi\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    [cryptoApi.reducerPath]: cryptoApi.reducer,\r\n    [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer,\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport store from \"./store\";\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}